{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "AWS CloudFormation Master Stack Test",
  "Parameters" : {
    "VPCAvailabilityZone1": {
      "Description": "One of two Availability Zones that will be used to create subnets.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "VPCAvailabilityZone2": {
      "Description": "Two of two Availability Zones that will be used to create subnets. Must be different than VPCAvailabilityZone2.",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "255"
    },
    "S3Bucket": {
      "Type": "String",
      "Description": "S3 Bucket name"
    },
    "S3Key": {
      "Type": "String",
      "Description": "S3 Key name"
    },
    "HealthcheckURL": {
      "Type": "String",
      "Description": "ElasticBeanstalk app's Healthcheck URL"
    },
    "KeyName": {
      "Type": "String",
      "Description": "EC2 Key name"
    },
    "VPCTemplateKey": {
      "Type": "String",
      "Description": "VPC Template S3 Key"
    },
    "AppTemplateKey": {
      "Type": "String",
      "Description": "Application Template S3 Key"
    },
    "ResourcesTemplateKey": {
      "Description": "The key of the template for the EB resources and application substack",
      "Type": "String",
      "Default": "resource.json"
    },
    "DBUsername": {
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    }
  },
  "Resources" : {
    "VPCScaffold": {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : {
          "Fn::Join" : ["/",
            [
              "https://s3-ap-northeast-1.amazonaws.com",
              {"Ref": "S3Bucket"},
              {"Ref": "VPCTemplateKey"}
            ]
          ]
        },
        "Parameters" : {
          "KeyName": { "Ref" : "KeyName" },
          "VPCAvailabilityZone1": { "Ref" : "VPCAvailabilityZone1" },
          "VPCAvailabilityZone2": { "Ref" : "VPCAvailabilityZone2" }
        }
      }
    },
    "AppResource": {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : {
          "Fn::Join" : ["/",
            [
              "https://s3-ap-northeast-1.amazonaws.com",
              {"Ref": "S3Bucket"},
              {"Ref": "ResourcesTemplateKey"}
            ]
          ]
        },
        "Parameters" : {
          "PrivateSubnet1" : { "Fn::GetAtt" : ["VPCScaffold", "Outputs.PrivateSubnet1"] },
          "PrivateSubnet2" : { "Fn::GetAtt" : ["VPCScaffold", "Outputs.PrivateSubnet2"] },
          "VpcId": { "Fn::GetAtt" : ["VPCScaffold", "Outputs.VpcId"] },
          "InstanceSecurityGroup" : { "Fn::GetAtt" : ["VPCScaffold", "Outputs.InstanceSecurityGroup"] },
          "BastionSecurityGroup": {"Fn::GetAtt": ["VPCScaffold", "Outputs.BastionSecurityGroup"]},
          "DBUsername": {"Ref": "DBUsername"},
          "DBPassword": {"Ref": "DBPassword"}
        }
      }
    },
    "App1" : {
      "Type" : "AWS::CloudFormation::Stack",
      "Properties" : {
        "TemplateURL" : {
          "Fn::Join" : ["/",
            [
              "https://s3-ap-northeast-1.amazonaws.com",
              {"Ref": "S3Bucket"},
              {"Ref": "AppTemplateKey"}
            ]
          ]
        },
        "Parameters" : {
          "VpcId": { "Fn::GetAtt" : ["VPCScaffold", "Outputs.VpcId"] },
          "S3Bucket": {"Ref": "S3Bucket"},
          "S3Key": {"Ref": "S3Key"},
          "DatabaseURL": {"Fn::GetAtt": ["AppResource", "Outputs.DatabaseURL"]},
          "InstanceSecurityGroup": { "Fn::GetAtt" : ["VPCScaffold", "Outputs.InstanceSecurityGroup"] },
          "HealthcheckURL": {"Ref": "HealthcheckURL"},
          "KeyName": {"Ref": "KeyName"},
          "PublicSubnets" : {
            "Fn::Join": [",", [{ "Fn::GetAtt" : ["VPCScaffold", "Outputs.PublicSubnet1"] }, { "Fn::GetAtt" : ["VPCScaffold", "Outputs.PublicSubnet2"] }]]
          }
        }
      }
    }
  },
  "Outputs" : {
    "URL": {
      "Description": "URL of the AWS Elastic Beanstalk Environment",
      "Value": {
        "Fn::GetAtt": ["App1", "Outputs.URL"]
      }
    }
  }
}