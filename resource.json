{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "AWS CloudFormation Sample Template VPC_RDS_DB_Instance",
  "Parameters": {
    "VpcId": {
      "Type": "String",
      "Description": "VpcId of your existing Virtual Private Cloud (VPC)"
    },
    "PrivateSubnet1": {
      "Type": "String",
      "Description": "Private Subnet"
    },
    "PrivateSubnet2": {
      "Type": "String",
      "Description": "Private Subnet"
    },
    "InstanceSecurityGroup" : {
      "Description" : "A VPC Security Group ID that has ingress access to a NAT instance in the VPC. EB instances will be launched into this group.",
      "Type": "String"
    },
    "BastionSecurityGroup": {
      "Description": "BastionSecurityGroup",
      "Type": "String"
    },
    "DBName": {
      "Default": "mydb",
      "Description": "The database name",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBUsername": {
      "NoEcho": "true",
      "Description": "The database admin account username",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "16",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]*",
      "ConstraintDescription": "must begin with a letter and contain only alphanumeric characters."
    },
    "DBPassword": {
      "NoEcho": "true",
      "Description": "The database admin account password",
      "Type": "String",
      "MinLength": "8",
      "MaxLength": "41",
      "AllowedPattern": "[a-zA-Z0-9]*",
      "ConstraintDescription": "must contain only alphanumeric characters."
    },
    "DBClass": {
      "Default": "db.t2.micro",
      "Description": "Database instance class",
      "Type": "String",
      "AllowedValues": ["db.t2.micro", "db.t2.small"],
      "ConstraintDescription": "must select a valid database instance type."
    },
    "DBAllocatedStorage": {
      "Default": "5",
      "Description": "The size of the database (Gb)",
      "Type": "Number",
      "MinValue": "5",
      "MaxValue": "20",
      "ConstraintDescription": "must be between 5 and 20Gb."
    }
  },
  "Resources": {
    "DBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow the Elastic Beanstalk instances to access the RDS database",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "5432",
            "ToPort": "5432",
            "SourceSecurityGroupId": {
              "Ref": "InstanceSecurityGroup"
            }
          },
          {
           "IpProtocol": "tcp",
            "FromPort": "5432",
            "ToPort": "5432",
            "SourceSecurityGroupId": {
              "Ref": "BastionSecurityGroup"
            }
          }
        ],
        "SecurityGroupEgress": [{
          "IpProtocol": "tcp",
          "FromPort": "5432",
          "ToPort": "5432",
          "CidrIp": "0.0.0.0/0"
        }]
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnets available for the RDS DB Instance",
        "SubnetIds": [
          {"Ref": "PrivateSubnet1"},
          {"Ref": "PrivateSubnet2"}
        ]
      }
    },
    "MyDB": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBName": { "Ref": "DBName" },
        "AllocatedStorage": { "Ref": "DBAllocatedStorage" },
        "DBInstanceClass": { "Ref": "DBClass" },
        "Engine": "postgres",
        "EngineVersion": "9.3",
        "MasterUsername": { "Ref": "DBUsername" } ,
        "MasterUserPassword": { "Ref": "DBPassword" },
        "DBSubnetGroupName": { "Ref": "DBSubnetGroup" },
        "VPCSecurityGroups": [ { "Ref": "DBSecurityGroup" }  ]
      }
    }
  },
  "Outputs": {
    "DBSecurityGroup": {
      "Value":  { "Ref": "DBSecurityGroup" }
    },
    "DatabaseURL": {
      "Description": "URL of Database",
      "Value": {
        "Fn::Join": ["",
          [
            "postgres://",
            {"Ref": "DBUsername"},
            ":",
            {"Ref": "DBPassword"},
            "@",
            {"Fn::GetAtt": ["MyDB", "Endpoint.Address"]},
            ":",
            {"Fn::GetAtt": ["MyDB", "Endpoint.Port"]},
            "/",
            {"Ref": "DBName"}
          ]
        ]
      }
    }
  }
}